events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=api_cache:10m
                     max_size=1g inactive=60m use_temp_path=off;
    proxy_cache_key "$scheme$request_method$host$request_uri$is_args$args";
    proxy_cache_valid 200 302 5m;
    proxy_cache_valid 404 1m;

    # Настройки SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    upstream authentication_service {
        server authentication-service:8000;
    }

    upstream generator_service {
        server generator-service:8000;
    }

    upstream statistics_service {
        server statistics-service:8000;
    }

    # HTTP редирект на HTTPS
    server {
        listen 80;
        listen [::]:80;
        server_name _;
        return 301 https://$host$request_uri;
    }

    # HTTPS сервер
    server {
        listen 443 ssl;
        listen [::]:443 ssl;
        http2 on;
        server_name _;

        # SSL сертификаты
        ssl_certificate /etc/nginx/ssl/certificate.crt;
        ssl_certificate_key /etc/nginx/ssl/private.key;

        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Корневая директория
        root /usr/share/nginx/html;
        index index.html;

	location /api/auth {
	    # Блокируем прямой доступ через адресную строку браузера
	    if ($http_sec_fetch_mode = "navigate") {
	        return 404;
	    }
	    
	    # Блокируем запросы без Sec-Fetch заголовков (прямой ввод URL)
	    if ($http_sec_fetch_mode = "") {
	        return 404 "Опаньки! Иди отсюда!";
	    }
	
	    proxy_pass http://authentication_service/auth;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_connect_timeout 30s;
	    proxy_send_timeout 30s;
	    proxy_read_timeout 30s;
	}
	
	location /api/generate {
	    # Блокируем прямой доступ через адресную строку браузера
	    if ($http_sec_fetch_mode = "navigate") {
	        return 404;
	    }
	    
	    # Блокируем запросы без Sec-Fetch заголовков (прямой ввод URL)
	    if ($http_sec_fetch_mode = "") {
	        return 404 "Опаньки! Иди отсюда!";
	    }
	
	    proxy_pass http://generator_service/generate;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_connect_timeout 30s;
	    proxy_send_timeout 30s;
	    proxy_read_timeout 30s;
            
	}
	
	location /api/statistics {
	    # Блокируем прямой доступ через адресную строку браузера
	    if ($http_sec_fetch_mode = "navigate") {
	        return 404;
	    }
	    
	    # Блокируем запросы без Sec-Fetch заголовков (прямой ввод URL)
	    if ($http_sec_fetch_mode = "") {
	        return 404 "Опаньки! Иди отсюда!";
	    }
	
	    proxy_pass http://statistics_service/statistics;
	    proxy_set_header Host $host;
	    proxy_set_header X-Real-IP $remote_addr;
	    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	    proxy_set_header X-Forwarded-Proto $scheme;
	    proxy_connect_timeout 30s;
	    proxy_send_timeout 30s;
	    proxy_read_timeout 30s;
	}

        # Обработка SPA роутинга
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Статические файлы
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|webp|avif|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # HTML файлы
        location ~* \.html$ {
            expires -1;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
            add_header Pragma "no-cache";
        }

        # Gzip сжатие
        gzip on;
        gzip_vary on;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_types
            text/plain
            text/css
            text/xml
            text/javascript
            application/javascript
            application/xml+rss
            application/json
            application/vnd.ms-fontobject
            font/ttf
            font/opentype;

        # Запрет доступа к скрытым файлам
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}
